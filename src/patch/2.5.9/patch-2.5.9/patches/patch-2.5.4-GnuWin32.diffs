diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' patch-2.5.4-orig/common.h patch-2.5.4/common.h
--- patch-2.5.4-orig/common.h	1999-08-30 08:20:08.000000000 +0200
+++ patch-2.5.4/common.h	2002-05-31 22:30:18.000000000 +0200
@@ -324,5 +324,9 @@ GENERIC_OBJECT *realloc ();
 #endif
 
 #ifndef TTY_DEVICE
+#ifndef __WIN32__
 #define TTY_DEVICE "/dev/tty"
+#else
+#define TTY_DEVICE (_fileno(stdout))
+#endif /* __WIN32_ */
 #endif
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' patch-2.5.4-orig/util.c patch-2.5.4/util.c
--- patch-2.5.4-orig/util.c	1999-08-30 08:20:08.000000000 +0200
+++ patch-2.5.4/util.c	2002-05-31 22:55:40.000000000 +0200
@@ -568,7 +568,12 @@ ask (char const *format, ...)
 	 which makes a call-process `patch' hang when it reads from /dev/tty.
 	 POSIX.2 requires that we read /dev/tty, though.  */
       ttyfd = (posixly_correct || isatty (STDOUT_FILENO)
+#ifndef __WIN32__
 	       ? open (TTY_DEVICE, O_RDONLY)
+#else /* __WIN32__ */
+			? _fileno(stdout)
+#endif /* __WIN32__ */
+
 	       : -1);
     }
 
@@ -582,6 +587,7 @@ ask (char const *format, ...)
   else
     {
       size_t s = 0;
+#ifndef __WIN32__
       while ((r = read (ttyfd, buf + s, bufsize - 1 - s)) == bufsize - 1 - s
 	     && buf[bufsize - 2] != '\n')
 	{
@@ -591,6 +597,15 @@ ask (char const *format, ...)
 	  if (!buf)
 	    memory_fatal ();
 	}
+#else /* __WIN32__ */
+	{
+	  char wbuf[80]={80};
+	  _cgets(wbuf);
+	  r = wbuf[1];
+	  buf = realloc(buf, r+2);
+	  strcpy(buf, &wbuf[2]);
+	}	  
+#endif /* __WIN32__ */
       if (r == 0)
 	printf ("EOF\n");
       else if (r < 0)
